# shellcheck shell=bash

# This script can be sourced in services.d run and cont-init.d/cont-finish.d modules
# It provides some basic common functions

# all errors will show a line number and the command used to produce the error
# shellcheck disable=SC2148,SC2164
SCRIPT_PATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd)/$(basename "$0")"
trap 'echo -e "[ERROR] $SCRIPT_PATH in line $LINENO when executing: $BASH_COMMAND"' ERR

# This function returns 0 if a variable is "set", and 1 if it's not set
# It can be used instead of [[ -n "$var" ]] to ensure the variable is set properly
# For example:
# x="yes"; if chk_enabled "$x"; then echo "$x is enabled"; else echo "$x is not enabled"; fi
# y="no"; if chk_disabled "$y"; then echo "$y is disabled"; else echo "$y is not disabled"; fi

function chk_enabled ()
{
    case "${1,,}" in
        1 | true | on | enabled | enable | yes | y | ok | always | set )
            return 0
        ;;
    esac;
    return 1
}

function chk_disabled ()
{
    case "${1,,}" in
        0 | false | off | disabled | disable | no | n | never | not | nope | unset )
            return 0
        ;;
    esac;
    return 1
}

# The following simplifies the most common use of s6wrap. Now, you can use either
# s6wrap as originally designed, or, instead of having to define the arguments below,
# you can do things like:
# "${s6wrap[@]}" echo "hello world"

# grab the basename of the script that called this script and remove the extension

# shellcheck disable=SC2164
SCRIPT_NAME="$(basename "$0")"
SCRIPT_NAME="${SCRIPT_NAME%.*}"

# shellcheck disable=SC2034
s6wrap=(s6wrap --quiet --timestamps --prepend="$SCRIPT_NAME" --args)

# this stops the s6 service thus eliminating to have sleep running for services that shouldn't run
# meant to be used in the script that is the child to s6-supervise
function stop_service() {
    _SERVICE=$(ps -q$(ps -cp $$ -o ppid="") -o args= | grep -F s6-supervise | cut -d' ' -f2)
    if [[ -z ${_SERVICE} ]]; then
        echo "unable to stop service (possibly not called from by s6 service)"
        exit 1
    fi
    s6-svc -d /run/service/"${_SERVICE}"
    # just in case this doesn't work, exec an infinite sleep
    # if the service stopping works, the sleep will just be terminated
    exec sleep infinity
}
