---
name: Deploy Trixie Test Images

on:
  # Enable manual running of action if necessary
  workflow_dispatch:
    inputs:
      reason:
        required: true
        description: "Reason for running this workflow"
      disable_upstream_triggers:
        required: false
        type: boolean
        description: "Rebuild the base images but don't trigger downstream builds"
        default: false
  # disable deploy on push, only deployed manually as this build will trigger
  # tons of other rebuilds
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  WORKFLOW_AUTH_TOKEN: ${{ secrets.GH_PAT_MIKENYE }}
  WORKFLOW_REASON: "triggered via deploy_ghcr.yml in sdr-enthusiasts/docker-baseimage"

jobs:
  hadolint:
    name: Run hadolint against docker files
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5.0.0
      - name: Pull hadolint/hadolint:latest Image
        run: docker pull hadolint/hadolint:latest
      - name: Run hadolint against Dockerfiles
        run: docker run --rm -i -v "$PWD":/workdir --workdir /workdir --entrypoint hadolint hadolint/hadolint --ignore DL3003 --ignore DL3006 --ignore DL3010 --ignore DL4001 --ignore DL3007 --ignore DL3008 --ignore SC2068 --ignore DL3007 --ignore SC1091 --ignore DL3013 --ignore DL3010 $(find . -type f -iname "Dockerfile*")

  # Basefile
  deploy_ghcr_base:
    name: Base
    needs: [hadolint]
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    uses: sdr-enthusiasts/common-github-workflows/.github/workflows/sdre.yml@main
    with:
      push_enabled: true
      push_destinations: ghcr.io
      ghcr_repo_owner: ${{ github.repository_owner }}
      ghcr_repo: ${{ github.repository }}
      build_with_tmpfs: false
      build_latest: true
      docker_latest_tag: trixie-base
      docker_build_file: trixie/Dockerfile.base
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  # Next steps are all of the deployments that depend on the base image
  deploy_ghcr_mlat_client:
    needs: [deploy_ghcr_base]
    name: Mlat Client
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    uses: sdr-enthusiasts/common-github-workflows/.github/workflows/sdre.yml@main
    with:
      push_enabled: true
      push_destinations: ghcr.io
      ghcr_repo_owner: ${{ github.repository_owner }}
      ghcr_repo: ${{ github.repository }}
      build_with_tmpfs: false
      build_latest: true
      docker_latest_tag: trixie-mlatclient
      build_baseimage_test: true
      build_baseimage_url: :base/:trixie-base
      docker_build_file: trixie/Dockerfile.mlatclient
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  deploy_ghcr_planefence_base:
    name: Planefence
    needs: [deploy_ghcr_base]
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    uses: sdr-enthusiasts/common-github-workflows/.github/workflows/sdre.yml@main
    with:
      push_enabled: true
      push_destinations: ghcr.io
      ghcr_repo_owner: ${{ github.repository_owner }}
      ghcr_repo: ${{ github.repository }}
      build_with_tmpfs: false
      build_latest: true
      docker_latest_tag: trixie-planefence_base
      build_baseimage_test: true
      build_baseimage_url: :base/:trixie-base
      docker_build_file: trixie/Dockerfile.planefence_base
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  # deployments that only rely on rtlsdr

  deploy_ghcr_soapy_full:
    name: Soapy Full
    needs: [deploy_ghcr_base]
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    uses: sdr-enthusiasts/common-github-workflows/.github/workflows/sdre.yml@main
    with:
      push_enabled: true
      push_destinations: ghcr.io
      ghcr_repo_owner: ${{ github.repository_owner }}
      ghcr_repo: ${{ github.repository }}
      build_with_tmpfs: false
      build_latest: true
      docker_latest_tag: trixie-soapy-full
      build_baseimage_test: true
      build_baseimage_url: :base/:trixie-base
      docker_build_file: trixie/Dockerfile.soapy-full
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  # deployments that rely on rtlsdr AND mlatclient

  deploy_ghcr_wreadsb:
    name: Wreadsb
    needs: [deploy_ghcr_base, deploy_ghcr_mlat_client]
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    uses: sdr-enthusiasts/common-github-workflows/.github/workflows/sdre.yml@main
    with:
      push_enabled: true
      push_destinations: ghcr.io
      ghcr_repo_owner: ${{ github.repository_owner }}
      ghcr_repo: ${{ github.repository }}
      build_with_tmpfs: false
      build_latest: true
      docker_latest_tag: trixie-wreadsb
      build_baseimage_test: true
      build_baseimage_url: :mlatclient/:trixie-mlatclient/g;s/:base/:trixie-base
      docker_build_file: trixie/Dockerfile.wreadsb
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  # deployments that rely on just soapy-full

  deploy_ghcr_acars-decoder-soapy:
    name: ACARS Decoder Soapy
    needs: [deploy_ghcr_wreadsb]
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    uses: sdr-enthusiasts/common-github-workflows/.github/workflows/sdre.yml@main
    with:
      push_enabled: true
      push_destinations: ghcr.io
      ghcr_repo_owner: ${{ github.repository_owner }}
      ghcr_repo: ${{ github.repository }}
      build_with_tmpfs: false
      build_latest: true
      docker_latest_tag: trixie-acars-decoder-soapy
      build_baseimage_test: true
      build_baseimage_url: :soapy-full/:trixie-soapy-full
      docker_build_file: trixie/Dockerfile.acars-decoder-soapy
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}

  # deployments that rely on just wreadsb

  deploy_dump978-full:
    name: Dump978 Full
    needs: [deploy_ghcr_wreadsb]
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    uses: sdr-enthusiasts/common-github-workflows/.github/workflows/sdre.yml@main
    with:
      push_enabled: true
      push_destinations: ghcr.io
      ghcr_repo_owner: ${{ github.repository_owner }}
      ghcr_repo: ${{ github.repository }}
      build_with_tmpfs: false
      build_latest: true
      docker_latest_tag: trixie-dump978-full
      build_baseimage_test: true
      build_baseimage_url: :wreadsb/:trixie-wreadsb
      docker_build_file: trixie/Dockerfile.dump978-full
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}
